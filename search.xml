<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="/blog/undefined/hello-world.html"/>
      <url>/blog/undefined/hello-world.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript事件循环、微任务与MutationObserver全面解析</title>
      <link href="/blog/notes/no-003.html"/>
      <url>/blog/notes/no-003.html</url>
      
        <content type="html"><![CDATA[<hr><h1 id="JavaScript事件循环、微任务与MutationObserver全面解析"><a href="#JavaScript事件循环、微任务与MutationObserver全面解析" class="headerlink" title="JavaScript事件循环、微任务与MutationObserver全面解析"></a>JavaScript事件循环、微任务与MutationObserver全面解析</h1><h2 id="1️⃣-事件循环（Event-Loop）核心机制"><a href="#1️⃣-事件循环（Event-Loop）核心机制" class="headerlink" title="1️⃣ 事件循环（Event Loop）核心机制"></a>1️⃣ 事件循环（Event Loop）核心机制</h2><p>事件循环是浏览器协调任务执行的核心机制，用于调度事件、用户交互、脚本执行和渲染。其运行流程分为三个阶段：</p><ol><li><strong>任务队列（Task Queue）</strong><br>从宏任务队列中选取<strong>一个</strong>可执行任务（如<code>setTimeout</code>、<code>I/O</code>操作），执行完毕后进入下一阶段。</li><li><strong>微任务队列（Microtask Queue）</strong><br>执行<strong>所有</strong>微任务（如<code>Promise.then()</code>、<code>MutationObserver</code>），直到队列清空。此阶段会阻塞渲染。</li><li><strong>渲染更新（Rendering）</strong><br>根据浏览器刷新率（通常60Hz，间隔16.67ms）决定是否更新UI。非每次循环必触发。</li></ol><blockquote><p>💡 <strong>关键特性</strong>：微任务队列执行优先级高于宏任务，且在<strong>同一事件循环中连续执行</strong>直至清空。</p></blockquote><hr><h2 id="2️⃣-宏任务（Macrotask）与微任务（Microtask）对比"><a href="#2️⃣-宏任务（Macrotask）与微任务（Microtask）对比" class="headerlink" title="2️⃣ 宏任务（Macrotask）与微任务（Microtask）对比"></a>2️⃣ 宏任务（Macrotask）与微任务（Microtask）对比</h2><table><thead><tr><th><strong>类型</strong></th><th><strong>常见API</strong></th><th><strong>执行时机</strong></th><th><strong>队列特性</strong></th></tr></thead><tbody><tr><td><strong>宏任务</strong></td><td><code>setTimeout</code>, <code>setInterval</code>, <code>I/O</code>, UI渲染</td><td>每次循环执行一个</td><td>多队列（按任务源分组）</td></tr><tr><td><strong>微任务</strong></td><td><code>Promise.then()</code>, <code>queueMicrotask()</code>, <code>MutationObserver</code></td><td>宏任务结束后立即执行所有</td><td>单队列（先进先出）</td></tr></tbody></table><p><strong>执行顺序示例</strong>：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'宏任务'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'微任务'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 输出：微任务 → 宏任务</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr><h2 id="3️⃣-MutationObserver的工作原理与应用"><a href="#3️⃣-MutationObserver的工作原理与应用" class="headerlink" title="3️⃣ MutationObserver的工作原理与应用"></a>3️⃣ MutationObserver的工作原理与应用</h2><h3 id="3-1-核心机制"><a href="#3-1-核心机制" class="headerlink" title="3.1 核心机制"></a>3.1 核心机制</h3><ul><li><strong>异步监听DOM变化</strong>，回调函数属于<strong>微任务</strong>，在DOM修改后、渲染前执行。</li><li><strong>批量处理</strong>：连续DOM变更合并为一次回调，通过<code>MutationRecord</code>数组传递变更详情。</li></ul><h3 id="3-2-使用步骤"><a href="#3-2-使用步骤" class="headerlink" title="3.2 使用步骤"></a>3.2 使用步骤</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 1. 创建观察器</span><span class="token keyword">const</span> observer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MutationObserver</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">mutations</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>  mutations<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">m</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'DOM已变更'</span><span class="token punctuation">,</span> m<span class="token punctuation">.</span>type<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 2. 配置观察选项</span><span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span>  <span class="token literal-property property">attributes</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token comment">// 监听属性变化</span>  <span class="token literal-property property">childList</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token comment">// 监听子节点变化</span>  <span class="token literal-property property">subtree</span><span class="token operator">:</span> <span class="token boolean">true</span>       <span class="token comment">// 监听所有后代节点</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment">// 3. 启动观察</span>observer<span class="token punctuation">.</span><span class="token function">observe</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>body<span class="token punctuation">,</span> config<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 4. 触发变更（需手动修改DOM属性）</span>document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">'data-test'</span><span class="token punctuation">,</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ✅ 必须主动触发变更</span><span class="token comment">// 5. 停止观察</span><span class="token comment">// observer.disconnect();</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-3-常见问题"><a href="#3-3-常见问题" class="headerlink" title="3.3 常见问题"></a>3.3 常见问题</h3><ul><li><strong>回调未触发</strong>：未实际修改DOM属性（如仅注册观察但未调用<code>setAttribute</code>）。</li><li><strong>性能优化</strong>：通过<code>attributeFilter</code>限定监听属性（如<code>['class', 'style']</code>）。</li></ul><hr><h2 id="4️⃣-实际开发注意事项"><a href="#4️⃣-实际开发注意事项" class="headerlink" title="4️⃣ 实际开发注意事项"></a>4️⃣ 实际开发注意事项</h2><ol><li><strong>微任务递归风险</strong><br>微任务中递归添加微任务会导致<strong>阻塞渲染</strong>（例：<code>queueMicrotask</code>内递归调用自身）。<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">recursiveMicrotask</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token function">queueMicrotask</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>    <span class="token comment">// 长时间操作将冻结UI</span>    <span class="token function">recursiveMicrotask</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><strong>跨浏览器兼容方案</strong><br>老旧浏览器需降级处理：<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">runMicrotask</span><span class="token punctuation">(</span><span class="token parameter">func</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> Promise <span class="token operator">!==</span> <span class="token string">'undefined'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>func<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> MutationObserver <span class="token operator">!==</span> <span class="token string">'undefined'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">const</span> obs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MutationObserver</span><span class="token punctuation">(</span>func<span class="token punctuation">)</span><span class="token punctuation">;</span>    obs<span class="token punctuation">.</span><span class="token function">observe</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>body<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">attributes</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">'microtask-trigger'</span><span class="token punctuation">,</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 必须触发变更</span>  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token function">setTimeout</span><span class="token punctuation">(</span>func<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><strong>Node.js差异</strong><br><code>process.nextTick</code>优先级高于<code>Promise</code>，属于独立队列。</li></ol><hr><h2 id="5️⃣-总结与最佳实践"><a href="#5️⃣-总结与最佳实践" class="headerlink" title="5️⃣ 总结与最佳实践"></a>5️⃣ 总结与最佳实践</h2><ul><li><strong>优先使用</strong> <code>queueMicrotask</code> 替代 <code>Promise.resolve().then()</code>，避免创建冗余Promise实例。</li><li><strong>慎用微任务递归</strong>：避免长时间阻塞主线程，复杂任务拆分为宏任务。</li><li><strong>MutationObserver适用场景</strong>：<ul><li>监听特定元素属性变更（如表单动态验证）</li><li>实现防篡改水印（DOM删除后自动重建）</li><li>替代已废弃的<code>Object.observe</code></li></ul></li></ul><blockquote><p>⚠️ <strong>性能警示</strong>：微任务队列清空前会阻塞渲染，单个任务耗时需控制在 <strong>1ms</strong> 以内以维持60fps流畅度</p></blockquote><hr><p><strong>参考资料</strong>：  </p><ol><li><a href="http://mp.weixin.qq.com/s?__biz=MzU3NTg5MjU1Mw==">浏览器事件循环机制</a>  </li><li><a href="https://wenku.csdn.net/doc/60r6axocqh">微任务执行原理</a>  </li><li><a href="http://mp.weixin.qq.com/s?__biz=MjM5MDA2MTI1MA==">宏任务与微任务详解</a>  </li><li><a href="https://blog.csdn.net/weixin_42369598/article/details/122918748">MutationObserver实战</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>png图片给背景添加阴影</title>
      <link href="/blog/notes/no-004.html"/>
      <url>/blog/notes/no-004.html</url>
      
        <content type="html"><![CDATA[<h3 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h3><img src="/blog/notes/no-004/1.jpeg" class=""><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">        <span class="token selector">body</span><span class="token punctuation">{</span>            <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>            <span class="token property">padding</span><span class="token punctuation">:</span> 5% 0<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> aliceblue<span class="token punctuation">;</span>            <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>            <span class="token property">flex-direction</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span>            <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector">.title</span><span class="token punctuation">{</span>            <span class="token property">font-size</span><span class="token punctuation">:</span> 2rem<span class="token punctuation">;</span>            <span class="token property">font-weight</span><span class="token punctuation">:</span> 700<span class="token punctuation">;</span>            <span class="token property">line-height</span><span class="token punctuation">:</span> 1.5<span class="token punctuation">;</span>            <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector">img</span><span class="token punctuation">{</span>            <span class="token comment">/* 阴影模糊半径 */</span>           <span class="token property">filter</span><span class="token punctuation">:</span> <span class="token function">drop-shadow</span><span class="token punctuation">(</span>10px 10px 20px #000<span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token property">box-shadow</span><span class="token punctuation">:</span> 10px 10px 20px #000<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>title<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>给背景图加上        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./img/pepel.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>CSS filter 属性将模糊或颜色偏移等图形效果应用于元素。滤镜通常用于调整图像、背景和边框的渲染</p><blockquote><p>使用 <shadow> 参数沿图像的轮廓生成阴影效果。阴影语法类似于 <box-shadow>（在 CSS 背景和边框模块中定义），但不允许使用 inset 关键字以及 spread 参数。与所有 filter 属性值一样，任何在 drop-shadow() 后的滤镜同样会应用在阴影上。</box-shadow></shadow></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue移动端适配（vue-cli 3/4）</title>
      <link href="/blog/notes/no-002.html"/>
      <url>/blog/notes/no-002.html</url>
      
        <content type="html"><![CDATA[<h2 id="项目场景："><a href="#项目场景：" class="headerlink" title="项目场景："></a>项目场景：</h2><p>Vue项目H5页面，只要求适配移动端<font color="red">（vue 2.6 + @vue/cli 4.5.13）</font></p><hr><h2 id="问题描述："><a href="#问题描述：" class="headerlink" title="问题描述："></a>问题描述：</h2><p>以前做的<font color="red"> vue-cli 2.x </font>移动端适配我是用 <font color="red"> lib-flexible + px2rem-loader </font>，然后这次<font color="red"> @vue/cli 4 </font>用了它就不灵了，发现刷新页面样式缩小了，我擦。。。</p><hr><h2 id="原因分析："><a href="#原因分析：" class="headerlink" title="原因分析："></a>原因分析：</h2><p>后来翻阅了一些文档，由于viewport单位得到众多浏览器的兼容，lib-flexible这个过渡方案已经可以放弃使用，不管是现在的版本还是以前的版本，都存有一定的问题。建议大家开始使用viewport来替代此方案。</p><hr><h2 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h2><p>使用<font color="red"> amfe-flexible + postcss-pxtorem</font><br>amfe-flexible 是配置可伸缩布局方案，主要是将1rem设为viewWidth/10<br>postcss-pxtorem 是postcss的插件，用于将像素单元生成rem单位。</p><ol><li>安装 amfe-flexible 和 postcss-pxtorem</li></ol><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">npm install amfe<span class="token operator">-</span>flexible <span class="token operator">-</span><span class="token constant">S</span>npm install postcss<span class="token operator">-</span>pxtorem <span class="token operator">-</span><span class="token constant">D</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ol start="2"><li>在入口文件<font color="red"> main.js  </font>中引入</li></ol> <pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token string">'amfe-flexible'</span> <span class="token comment">// 引入适配包</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="3"><li>在<font color="red"> index.html  </font>添加</li></ol> <pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>meta name<span class="token operator">=</span><span class="token string">"viewport"</span> content<span class="token operator">=</span><span class="token string">"width=device-width, initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no"</span><span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="4"><li>在<font color="red"> vue.config.js </font>配置如下</li></ol><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>  <span class="token literal-property property">css</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token literal-property property">loaderOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span>      <span class="token literal-property property">postcss</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>          <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'postcss-pxtorem'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            <span class="token literal-property property">rootValue</span><span class="token operator">:</span> <span class="token number">37.5</span><span class="token punctuation">,</span>            <span class="token literal-property property">propList</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"*"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">//哪些属性需要转换成rem</span>            <span class="token literal-property property">minPixelValue</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token comment">// 最小转换单位</span>          <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token punctuation">]</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="5"><li>重启项目，如果报错 <font color="red"> Error: PostCSS plugin postcss-pxtorem requires PostCSS 8  </font>，降低  postcss-pxtorem 版本就行了</li></ol><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">npm i postcss<span class="token operator">-</span>pxtorem@<span class="token number">5.1</span><span class="token number">.1</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> postcss </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装vue脚手架@vue/cli 4.5.13(稳定版)</title>
      <link href="/blog/notes/no-001.html"/>
      <url>/blog/notes/no-001.html</url>
      
        <content type="html"><![CDATA[<p>首先新建一个<font color="red"> vue </font>测试项目，还记得以前自己是用<font color="red" bgcolor="yellow"> vue-cli 2.0的版本 </font>去构建的，毕竟里面有默认配置好的webpack配置，但现在很多小伙伴都已经用最新的<font color="red"> @vue/cli 4+ </font>版本去开发了，因为<font color="red"> @vue/cli  3 以上 </font>的版本，比<font color="red"> 2.0 </font>的配置文件简洁了很多，<strong>当然你还得跟上时代的脚步，不然你就被淘汰了</strong>。</p><p>但自己搭建过的小伙伴都应该知道，<font color="red"> @vue/cli 3 </font>和<font color="red"> @vue/cli 4 </font>默认没有vue.config.js文件，所以需要自己来创建配置。在项目的根目录新建一个 vue.config.js 文件来覆盖项目的配置，因为项目的配置比较多，这里就不分别介绍了，可以 <a href="https://cli.vuejs.org/zh/config/#vue-config-js">访问官方文档</a>.</p><p>这里给出一个基本的：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>  <span class="token literal-property property">publicPath</span><span class="token operator">:</span> <span class="token string">"./"</span><span class="token punctuation">,</span>      <span class="token comment">// 公共路径(必须有的)</span>  <span class="token literal-property property">outputDir</span><span class="token operator">:</span> <span class="token string">"dist"</span><span class="token punctuation">,</span>     <span class="token comment">// 输出文件目录</span>  <span class="token literal-property property">assetsDir</span><span class="token operator">:</span> <span class="token string">"./static"</span><span class="token punctuation">,</span> <span class="token comment">// 静态资源存放的文件夹(相对于ouputDir) 一般都是static目录，不然默认的会是assets</span>  <span class="token literal-property property">lintOnSave</span><span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">,</span>      <span class="token comment">// eslint-loader 是否在保存的时候检查(果断不用，这玩意儿我都没装)</span>  <span class="token literal-property property">runtimeCompiler</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span><span class="token comment">// 我用的only，打包后小些</span>  <span class="token literal-property property">productionSourceMap</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 在生产环境会生产.map文件 设置false可以减小dist文件大小，加速构建</span>  <span class="token literal-property property">devServer</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token literal-property property">open</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  <span class="token comment">// npm run serve后自动打开页面</span>    <span class="token literal-property property">host</span><span class="token operator">:</span> <span class="token string">'localhost'</span><span class="token punctuation">,</span>    <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token number">8085</span><span class="token punctuation">,</span> <span class="token comment">// 开发服务器运行端口号</span>    <span class="token comment">// hotOnly: true, // 热更新,</span>    <span class="token comment">// proxy: {</span>    <span class="token comment">//   '/api': {</span>    <span class="token comment">//     target: '127.0.0.1',</span>    <span class="token comment">//     changeOrigin: true,</span>    <span class="token comment">//     pathRewrite: {</span>    <span class="token comment">//       '^/api': ''</span>    <span class="token comment">//     },</span>    <span class="token comment">//   },</span>    <span class="token comment">// },</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token function-variable function">chainWebpack</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token function-variable function">configureWebpack</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="一、安装"><a href="#一、安装" class="headerlink" title="一、安装"></a>一、安装</h2><p>如果在电脑上已经安装了<font color="red"> vue-cli 2.0 </font>或者<font color="red"> @vue/cli 3 </font>的话需要先卸载再重新安装</p><table><thead><tr><th align="center">简要说明</th><th align="center"><font color="red"> vue-cli 2.0 </font></th><th align="center"><font color="red"> @vue/cli 3 </font></th></tr></thead><tbody><tr><td align="center">安装</td><td align="center">npm install -g vue-cli</td><td align="center">npm install -g @vue/cli</td></tr><tr><td align="center">卸载</td><td align="center">npm uninstall -g vue-cli</td><td align="center">npm uninstall -g @vue/cli</td></tr></tbody></table><p><font color="red"> 安装指定版本  </font>🎈<br>npm install -g @vue/<a href="mailto:cli@4.5.13">cli@4.5.13</a></p><p><font color="red"> 查询可用包的版本号 </font><br>npm view @vue/cli versions –json</p><p><font color="red"> 版本查询 </font>（检测是否安装成功）<br>  vue -V <br><br>通过上面的步骤就可完成<font color="red"> @vue/cli 4.5.13 </font>的安装。</p><h2 id="二、创建项目"><a href="#二、创建项目" class="headerlink" title="二、创建项目"></a>二、创建项目</h2><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">vue create <span class="token function">项目名称</span>   <span class="token punctuation">(</span><span class="token operator">*</span>必须是英文，不允许大写，必须是小写英文<span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>利用方向键 上、下来选择配置信息，点击回车进入下一步</p><img src="/blog/notes/no-001/1.png" class=""><p>（可以用上下键选择的忽略这步骤）如果在git Bash中不能用上下箭头选择，找到git 安装目录中bash.bashrc文件</p><img src="/blog/notes/no-001/2.png" class=""><p>然后在文件最底部加上  <font color="red"> alias vue=‘winpty vue.cmd’ </font></p><img src="/blog/notes/no-001/3.png" class=""><p>关闭再重新打开 git Bash 就可以上下选择啦 😎 🤣 😁</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">Vue <span class="token constant">CLI</span> v4<span class="token punctuation">.</span><span class="token number">5.13</span><span class="token operator">?</span> Please pick a preset<span class="token operator">:</span> Manually select features<span class="token operator">?</span> Check the features needed <span class="token keyword">for</span> your project<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> Choose Vue version                         <span class="token comment">//  选择Vue版本</span> <span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> Babel                                      <span class="token comment">//  代码编译</span> <span class="token punctuation">(</span> <span class="token punctuation">)</span> TypeScript                                 <span class="token comment">//  ts</span> <span class="token punctuation">(</span> <span class="token punctuation">)</span> Progressive Web <span class="token function">App</span> <span class="token punctuation">(</span><span class="token constant">PWA</span><span class="token punctuation">)</span> Support          <span class="token comment">//  支持渐进式网页应用程序</span> <span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> Router                                     <span class="token comment">//  vue路由</span> <span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> Vuex                                       <span class="token comment">//  状态管理模式</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token constant">CSS</span> Pre<span class="token operator">-</span>processors                         <span class="token comment">//  css预处理</span> <span class="token punctuation">(</span> <span class="token punctuation">)</span> Linter <span class="token operator">/</span> Formatter                         <span class="token comment">//  代码风格、格式校验</span> <span class="token punctuation">(</span> <span class="token punctuation">)</span> Unit Testing                               <span class="token comment">//  单元测试</span> <span class="token punctuation">(</span> <span class="token punctuation">)</span> <span class="token constant">E2E</span> Testing                                <span class="token comment">//  端对端测试</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>按<font color="red"> 空格键 </font>进行配置，然后 回车 进入下一步</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">Vue <span class="token constant">CLI</span> v4<span class="token punctuation">.</span><span class="token number">5.13</span><span class="token operator">?</span> Please pick a preset<span class="token operator">:</span> Manually select features<span class="token operator">?</span> Check the features needed <span class="token keyword">for</span> your project<span class="token operator">:</span> Choose Vue version<span class="token punctuation">,</span> Babel<span class="token punctuation">,</span> Router<span class="token punctuation">,</span> Vuex<span class="token punctuation">,</span> <span class="token constant">CSS</span> Pre<span class="token operator">-</span>processors<span class="token operator">?</span> Choose a version <span class="token keyword">of</span> Vue<span class="token punctuation">.</span>js that you want to start the project <span class="token keyword">with</span> <span class="token punctuation">(</span>Use arrow keys<span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token number">2</span><span class="token punctuation">.</span>x  <span class="token number">3</span><span class="token punctuation">.</span>x<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里我选择的是<font color="red"> vue2.x </font></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">Vue <span class="token constant">CLI</span> v4<span class="token punctuation">.</span><span class="token number">5.13</span><span class="token operator">?</span> Please pick a preset<span class="token operator">:</span> Manually select features<span class="token operator">?</span> Check the features needed <span class="token keyword">for</span> your project<span class="token operator">:</span> Choose Vue version<span class="token punctuation">,</span> Babel<span class="token punctuation">,</span> Router<span class="token punctuation">,</span> Vuex<span class="token punctuation">,</span> <span class="token constant">CSS</span> Pre<span class="token operator">-</span>processors<span class="token operator">?</span> Choose a version <span class="token keyword">of</span> Vue<span class="token punctuation">.</span>js that you want to start the project <span class="token keyword">with</span> <span class="token number">2</span><span class="token punctuation">.</span>x<span class="token operator">?</span> Use history mode <span class="token keyword">for</span> router<span class="token operator">?</span> <span class="token punctuation">(</span>Requires proper server setup <span class="token keyword">for</span> index fallback <span class="token keyword">in</span> production<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token constant">Y</span><span class="token operator">/</span>n<span class="token punctuation">)</span> y<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>选择是否使用路由 history router，我这里选择 <font color="red">是</font></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">Vue <span class="token constant">CLI</span> v4<span class="token punctuation">.</span><span class="token number">5.13</span><span class="token operator">?</span> Please pick a preset<span class="token operator">:</span> Manually select features<span class="token operator">?</span> Check the features needed <span class="token keyword">for</span> your project<span class="token operator">:</span> Choose Vue version<span class="token punctuation">,</span> Babel<span class="token punctuation">,</span> Router<span class="token punctuation">,</span> Vuex<span class="token punctuation">,</span> <span class="token constant">CSS</span> Pre<span class="token operator">-</span>processors<span class="token operator">?</span> Choose a version <span class="token keyword">of</span> Vue<span class="token punctuation">.</span>js that you want to start the project <span class="token keyword">with</span> <span class="token number">2</span><span class="token punctuation">.</span>x<span class="token operator">?</span> Use history mode <span class="token keyword">for</span> router<span class="token operator">?</span> <span class="token punctuation">(</span>Requires proper server setup <span class="token keyword">for</span> index fallback<span class="token keyword">in</span> production<span class="token punctuation">)</span> Yes<span class="token operator">?</span> Pick a <span class="token constant">CSS</span> pre<span class="token operator">-</span><span class="token function">processor</span> <span class="token punctuation">(</span>PostCSS<span class="token punctuation">,</span> Autoprefixer and <span class="token constant">CSS</span> Modules are supported by <span class="token keyword">default</span><span class="token punctuation">)</span><span class="token operator">:</span>  Sass<span class="token operator">/</span><span class="token constant">SCSS</span> <span class="token punctuation">(</span><span class="token keyword">with</span> dart<span class="token operator">-</span>sass<span class="token punctuation">)</span>  Sass<span class="token operator">/</span><span class="token constant">SCSS</span> <span class="token punctuation">(</span><span class="token keyword">with</span> node<span class="token operator">-</span>sass<span class="token punctuation">)</span><span class="token operator">&gt;</span> Less  Stylus<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我选择<font color="red"> Less </font>编译方式</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">Vue <span class="token constant">CLI</span> v4<span class="token punctuation">.</span><span class="token number">5.13</span><span class="token operator">?</span> Please pick a preset<span class="token operator">:</span> Manually select features<span class="token operator">?</span> Check the features needed <span class="token keyword">for</span> your project<span class="token operator">:</span> Choose Vue version<span class="token punctuation">,</span> Babel<span class="token punctuation">,</span> Router<span class="token punctuation">,</span> Vuex<span class="token punctuation">,</span> <span class="token constant">CSS</span> Pre<span class="token operator">-</span>processors<span class="token operator">?</span> Choose a version <span class="token keyword">of</span> Vue<span class="token punctuation">.</span>js that you want to start the project <span class="token keyword">with</span> <span class="token number">2</span><span class="token punctuation">.</span>x<span class="token operator">?</span> Use history mode <span class="token keyword">for</span> router<span class="token operator">?</span> <span class="token punctuation">(</span>Requires proper server setup <span class="token keyword">for</span> index fallback<span class="token keyword">in</span> production<span class="token punctuation">)</span> Yes<span class="token operator">?</span> Pick a <span class="token constant">CSS</span> pre<span class="token operator">-</span><span class="token function">processor</span> <span class="token punctuation">(</span>PostCSS<span class="token punctuation">,</span> Autoprefixer and <span class="token constant">CSS</span> Modules are supported by <span class="token keyword">default</span><span class="token punctuation">)</span><span class="token operator">:</span> Less<span class="token operator">?</span> Where <span class="token keyword">do</span> you prefer placing config <span class="token keyword">for</span> Babel<span class="token punctuation">,</span> ESLint<span class="token punctuation">,</span> etc<span class="token punctuation">.</span><span class="token operator">?</span>  In dedicated config files<span class="token operator">&gt;</span> In <span class="token keyword">package</span><span class="token punctuation">.</span>json<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>选择 <font color="red"> package.json </font></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">Vue <span class="token constant">CLI</span> v4<span class="token punctuation">.</span><span class="token number">5.13</span><span class="token operator">?</span> Please pick a preset<span class="token operator">:</span> Manually select features<span class="token operator">?</span> Check the features needed <span class="token keyword">for</span> your project<span class="token operator">:</span> Choose Vue version<span class="token punctuation">,</span> Babel<span class="token punctuation">,</span> Router<span class="token punctuation">,</span> Vuex<span class="token punctuation">,</span> <span class="token constant">CSS</span> Pre<span class="token operator">-</span>processors<span class="token operator">?</span> Choose a version <span class="token keyword">of</span> Vue<span class="token punctuation">.</span>js that you want to start the project <span class="token keyword">with</span> <span class="token number">2</span><span class="token punctuation">.</span>x<span class="token operator">?</span> Use history mode <span class="token keyword">for</span> router<span class="token operator">?</span> <span class="token punctuation">(</span>Requires proper server setup <span class="token keyword">for</span> index fallback<span class="token keyword">in</span> production<span class="token punctuation">)</span> Yes<span class="token operator">?</span> Pick a <span class="token constant">CSS</span> pre<span class="token operator">-</span><span class="token function">processor</span> <span class="token punctuation">(</span>PostCSS<span class="token punctuation">,</span> Autoprefixer and <span class="token constant">CSS</span> Modules are supported by <span class="token keyword">default</span><span class="token punctuation">)</span><span class="token operator">:</span> Less<span class="token operator">?</span> Where <span class="token keyword">do</span> you prefer placing config <span class="token keyword">for</span> Babel<span class="token punctuation">,</span> ESLint<span class="token punctuation">,</span> etc<span class="token punctuation">.</span><span class="token operator">?</span> In <span class="token keyword">package</span><span class="token punctuation">.</span>json<span class="token operator">?</span> Save <span class="token keyword">this</span> <span class="token keyword">as</span> a preset <span class="token keyword">for</span> future projects<span class="token operator">?</span> <span class="token punctuation">(</span>y<span class="token operator">/</span><span class="token constant">N</span><span class="token punctuation">)</span> n<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>是否保存当前选择的配置项，如果当前配置是经常用到的配置，建议选择y存储一下当前配置项。如果只是临时使用的话就不需要存储了，根据自己情况而定啦。</p><p>但是我是之前已经配置保存了，所以这里 <font color="red"> 我选 n </font></p><h2 id="三、运行项目"><a href="#三、运行项目" class="headerlink" title="三、运行项目"></a>三、运行项目</h2><p>项目创建完毕，打开文件夹</p><img src="/blog/notes/no-001/4.png" class=""><pre class="line-numbers language-none"><code class="language-none">npm run serve               // 运行项目<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><img src="/blog/notes/no-001/5.png" class="">]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> vue-cli </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
